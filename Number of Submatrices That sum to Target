Problem Link:-https://leetcode.com/problems/number-of-submatrices-that-sum-to-target/
Solution:- int numSubmatrixSumTarget(vector<vector<int>>& matrix, int target) {
      int n=matrix.size();
      int m=matrix[0].size();
     int sum=0;
        for(int i=0;i<n;i++)
        {
            for(int j=1;j<n;j++)
                matrix[i][j]+=matrix[i][j-1];
        }
        unordered_map<int,int> mp;
        sum=0;
        int count=0;
    for(int startcol=0;startcol<m;startcol++)
    {
        for(int j=startcol;j<m;j++)  // 0 
        {   
            mp.clear();
             sum=0;
            mp={{0,1}};
         
            for(int i=0;i<n;i++)
            {
                  if(startcol==0)
                  {
                      sum+=matrix[i][j];
                      
                      if(mp.find(sum-target)!=mp.end())
                      {     if(mp[sum-target])
                          count+=mp[sum-target];
                      }
                    
                  }
                else if (startcol>0)
                {
                     sum+=matrix[i][j]-matrix[i][startcol-1];
                      
                      if(mp.find(sum-target)!=mp.end())
                      {  
                          if(mp[sum-target])
                          count+=mp[sum-target];
                      }
                    
                }
              mp[sum]++;  
            }
        }
    }
     return count;       
    }
