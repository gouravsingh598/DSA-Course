Problem Link:-https://practice.geeksforgeeks.org/problems/trapping-rain-water-1587115621/1
while (t--){
        int n; cin>>n;
        int arr[n];
        for(int i=0;i<n;i++) cin>>arr[i];
        int l_max[n],r_max[n];
        l_max[0]= arr[0];
        r_max[n-1] = arr[n-1];
        for(int i=1;i<n;i++) l_max[i] = max(l_max[i-1],arr[i]);
        for(int i=n-2;i>=0;i--) r_max[i] = max(r_max[i+1],arr[i]);
        int ans =0;
        for(int i=0;i<n;i++){
            ans+= min(l_max[i],r_max[i]) - arr[i];
        }
        cout << ans<<endl;
    }
  2nd Approach Two pointer:-
  using namespace std;
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        int arr[n+1];
        for(int i=0;i<n;i++) cin>>arr[i];
        int l=0, r=n-1;
        int max_l=arr[l], max_r= arr[r];
        int ans=0;
        
        while (l<r){
            if(arr[l]>arr[r]){
                if(arr[r]<max_r){
                    ans+= max_r - arr[r];
                }
                else{
                    max_r = arr[r];
                }
                r--;
            }
            else{
                if(arr[l]<max_l){
                    ans+= max_l -arr[l];
                }
                else{
                    max_l = arr[l];
                }
                l++;
            }
        }
        cout << ans<<endl;
    }
}
