Problem Link:-https://leetcode.com/problems/search-a-2d-matrix/

Solution:-  bool searchMatrix(vector<vector<int>>& matrix, int target) {
        vector<int> v;
        for(int i=0;i<matrix.size();i++)
        {
            for(int j=0;j<matrix[i].size();j++)
            {
                if(matrix[i][j]==target)
                    return true;
            }
        }
        return false;
    }

optimised solution:-  bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int n=matrix.size();
        int m=matrix[0].size();
      int start=0;
      int end=(n*m)-1;
       if(n==1 && m==1)
         {
           if(matrix[n-1][m-1]==target)
               return true;
           else
               return false;
       }
      while(start<=end)
      {
         int mid=(start+end)/2;
          int ans=matrix[mid/m][mid%m];
          //cout<<ans<<endl;
          if(ans==target)
              return true;
          
          else if(ans>target)
              end=mid-1;
          else
              start=mid+1;
      }
        return false;
    }
