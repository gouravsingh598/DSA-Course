Problem Link-https://practice.geeksforgeeks.org/problems/longest-consecutive-subsequence2449/1
Solution :-
        int n,i,count=0,temp,max=0;
        vector<int>v;
        cin>>n;
        int arr[n+1];
        for(i=0;i<n;i++)
        cin>>arr[i];
        sort(arr,arr+n);
        for(i=0;i<n;i++)
        {
            if(arr[i]==arr[i+1]-1 || arr[i]==arr[i+1])
            {   if(arr[i]==arr[i+1]-1)
                 count++;
            }
         
            else
            {
            temp=count;
            v.push_back(temp);
            count=0;
            }
        }
        for(i=0;i<v.size();i++)
        {
            if(v[i]>max)
              max=v[i];
        }
        cout<<max+1<<endl;
        
   Efficient Solution:-     
   int longestConsecutive(vector<int>& nums) {
       unordered_set<int> s;
        int ans=0;
        int n=nums.size();
        for(int i:nums)
        {
            s.insert(i);
        }
          int curr_ans=0;  
       for(auto i:nums)
       {   curr_ans=0;
           int x=i;
          if(s.find(i-1)==s.end())
          { 
              while(s.find(x)!=s.end())
              {
                  x++;
                  curr_ans++;
              }
             if(curr_ans>ans)
                 ans=curr_ans;
          }
       }
        return ans;
    }
