Problem Link:-https://leetcode.com/problems/3sum/submissions/
Solution :-
 vector<vector<int>> threeSum(vector<int>& arr) {
        vector<vector<int>> ans;
        
        int n=arr.size();
      
        sort(arr.begin(),arr.end());
       
        for(int i=0;i<n-2;i++)
        {
          if(i==0 || (i>0 && arr[i]!= arr[i-1]))
          {
            int low=i+1;
            int high=n-1;
            int a=arr[i];
            int x=(0-a);
            while(low<high)
            {
                if((arr[low]+arr[high])==x)
                {
                    ans.push_back({arr[i],arr[low],arr[high]});
                     
                    while(low<high && arr[low]==arr[low+1])
                    low++;
                    
                      while(low<high && arr[high]==arr[high-1])
                      high--;
                    
                     low++;
                     high--;
                   
                }
                    
            
                else if((arr[low]+arr[high])>x)
                {
                    high--;
                }
                else if((arr[low]+arr[high])<x)
                {
                    low++;
                }
            }
             
          }
          
        }
       return ans; 
    }

