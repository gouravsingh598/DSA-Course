Problem Link:-https://leetcode.com/problems/next-permutation/
Solution:- void nextPermutation(vector<int>& nums) {
        int i = 0;
        for(i = nums.size() - 2 ; i >= 0 ; i--){
            if(nums[i] < nums[i+1])break;
        }
       // cout<<i<<" ";
        sort(nums.begin() + i + 1,nums.end());
        //for(int i=0;i<nums.size();i++)
           // cout<<nums[i]<<" ";
        for(int j = i; j < nums.size();j++ ){
            if(nums[j] > nums[i]){
                swap(nums[i] , nums[j]);
                return;
            }
        }
    }
    
    Efficient Solution:-      int n=nums.size(),i,j;
        for(i=n-2;i>=0;i--){
            if(nums[i]<nums[i+1]){
                break;
            }
        }
        if(i<0){
            reverse(nums.begin(),nums.end());
        }
        else{
            for(j=n-1;j>i;j--){
                if(nums[j]>nums[i]){
                    break;
                }
            }
            swap(nums[i],nums[j]);
            reverse(nums.begin()+i+1, nums.end());
        }
    }
